#!/usr/bin/env node

const { program } = require("commander");
const fs = require("fs-extra");
const path = require("path");
const chalk = require("chalk");
const pkg = require(require("path").resolve(__dirname, "..", "package.json"));

program
  .name("egka-ai")
  .description("EgKa AI Agents - AI Agent system for Cursor IDE")
  .version(pkg.version);

program
  .command("init")
  .description("Copies .cursor/rules and agents folders into the current directory")
  .action(async () => {
    try {
      console.log(chalk.blue("üöÄ EgKa AI Agents installation is starting..."));

      // Determine target directories
      const targetDir = process.cwd();
      const packageDir = path.dirname(__dirname); // parent of bin directory

      console.log(chalk.gray(`üìÅ Target directory: ${targetDir}`));
      console.log(chalk.gray(`üì¶ Package directory: ${packageDir}`));

      // Ensure .cursor/rules directory
      const cursorRulesDir = path.join(targetDir, ".cursor", "rules");
      await fs.ensureDir(cursorRulesDir);

      // Copy new-chat-rules.mdc
      const sourceRulesFile = path.join(
        packageDir,
        ".cursor",
        "rules",
        "new-chat-rules.mdc"
      );
      const targetRulesFile = path.join(cursorRulesDir, "new-chat-rules.mdc");

      if (await fs.pathExists(sourceRulesFile)) {
        await fs.copy(sourceRulesFile, targetRulesFile);
        console.log(
          chalk.green("‚úÖ .cursor/rules/new-chat-rules.mdc copied")
        );
      } else {
        console.log(chalk.yellow("‚ö†Ô∏è  new-chat-rules.mdc file not found"));
      }

      // Copy agents folder
      const sourceAgentsDir = path.join(packageDir, "agents");
      const targetAgentsDir = path.join(targetDir, "agents");

      if (await fs.pathExists(sourceAgentsDir)) {
        await fs.copy(sourceAgentsDir, targetAgentsDir);
        console.log(chalk.green("‚úÖ agents folder copied"));

        // Ensure subfolders (preserve existing contents)
        const subDirs = ["docs", "logs", "prompts", "tasks"];
        for (const subDir of subDirs) {
          const dirPath = path.join(targetAgentsDir, subDir);
          await fs.ensureDir(dirPath);
        }
        console.log(
          chalk.green(
            "‚úÖ agents subfolders created (existing content preserved)"
          )
        );
      } else {
        console.log(chalk.yellow("‚ö†Ô∏è  agents folder not found"));
      }

      console.log(chalk.green.bold("üéâ EgKa AI Agents installed successfully!"));
      console.log(chalk.blue("üìÅ Installation directory:"), targetDir);
      console.log("");
      console.log(
        chalk.cyan(
          "Setup completed. You can now use your AI agent system in Cursor."
        )
      );
    } catch (error) {
      console.error(
        chalk.red("‚ùå An error occurred during installation:"),
        error.message
      );
      process.exit(1);
    }
  });

program.parse();
